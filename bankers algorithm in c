#include <stdio.h>
#define MAX_PROCESSES 10
#define MAX_RESOURCES 10

int isSafe(int available[], int max[][MAX_RESOURCES], int allocation[][MAX_RESOURCES], int n, int m) {
    int work[MAX_RESOURCES];
    int finish[MAX_PROCESSES] = {0}; // Initialize all processes as unfinished

    for (int i = 0; i < m; i++) {
        work[i] = available[i];
    }

    for (int i = 0; i < n; i++) {
        if (!finish[i]) {
            int j;
            for (j = 0; j < m; j++) {
                if (max[i][j] - allocation[i][j] > work[j]) {
                    break;
                }
            }
            if (j == m) {
                finish[i] = 1;
                for (int k = 0; k < m; k++) {
                    work[k] += allocation[i][k];
                }
                i = -1;
            }
        }
    }

    for (int i = 0; i < n; i++) {
        if (!finish[i]) {
            return 0; 
        }
    }
    return 1; 
}

int main() {
    int processes, resources;
    printf("Enter the number of processes: ");
    scanf("%d", &processes);
    printf("Enter the number of resources: ");
    scanf("%d", &resources);

    int available[MAX_RESOURCES];
    int max[MAX_PROCESSES][MAX_RESOURCES];
    int allocation[MAX_PROCESSES][MAX_RESOURCES];

    printf("Enter the available resources:\n");
    for (int i = 0; i < resources; i++) {
        scanf("%d", &available[i]);
    }

    printf("Enter the maximum resource requirements for each process:\n");
    for (int i = 0; i < processes; i++) {
        for (int j = 0; j < resources; j++) {
            scanf("%d", &max[i][j]);
        }
    }

    printf("Enter the resource allocation for each process:\n");
    for (int i = 0; i < processes; i++) {
        for (int j = 0; j < resources; j++) {
            scanf("%d", &allocation[i][j]);
        }
    }

    if (isSafe(available, max, allocation, processes, resources)) {
        printf("System is in a safe state.\n");
    } else {
        printf("System is in an unsafe state.\n");
    }

    return 0;
}
